[
    {"#":"Health Check ",
    
    	"apiEndPoint":"/health",
    	"vaultEndPoint":"https://localhost:8200/v1/sys/health?standbycode=200&sealedcode=200&uninitcode=200&drsecondarycode=200&performancestandbycode=200",
    	"method":"GET"
    },
    {"#":"Health Check ",
    
    	"apiEndPoint":"/v2/health",
    	"vaultEndPoint":"http://localhost:8200/v1/sys/health?standbycode=200&sealedcode=200&uninitcode=200&drsecondarycode=200&performancestandbycode=200",
    	"method":"GET"
    },
    {"#":"Seal Status",
    
    	"apiEndPoint":"/seal-status",
    	"vaultEndPoint":"http://localhost:8200/v1/sys/seal-status",
    	"method":"GET",
    	"outparams":["type","initialized","sealed","progress","version","migration","cluster_name","cluster_id","recovery_seal"]
    },
    {"#":"Seal Status",
    
    	"apiEndPoint":"/v2/seal-status",
    	"vaultEndPoint":"https://localhost:8200/v1/sys/seal-status",
    	"method":"GET",
    	"outparams":["type","initialized","sealed","progress","version","migration","cluster_name","cluster_id","recovery_seal"]
    },
    {"#":"Unseal",
    
    	"apiEndPoint":"/unseal",
    	"vaultEndPoint":"https://<serverip>:<port>/v1/sys/unseal",
    	"method":"POST",
    	"params":[
        	{"name":"serverip","required":true,"appendToPath":true},
        	{"name":"port","required":true,"appendToPath":true},
        	{"name":"key","required":true},
        	{"name":"reset"}
        ],
      	"outparams":["sealed","progress"]
    },
    {"#":"Unseal",
    
    	"apiEndPoint":"/v2/unseal",
    	"vaultEndPoint":"http://<serverip>:<port>/v1/sys/unseal",
    	"method":"POST",
    	"params":[
        	{"name":"serverip","required":true,"appendToPath":true},
        	{"name":"port","required":true,"appendToPath":true},
        	{"name":"key","required":true},
        	{"name":"reset"}
        ],
      	"outparams":["sealed","progress"]
    },
    {"#":"Unseal Progress",
    
    	"apiEndPoint":"/unseal-progress",
    	"vaultEndPoint":"https://<serverip>:<port>/v1/sys/seal-status",
    	"method":"GET",
    	"params":[
        	{"name":"serverip","required":true,"appendToPath":true},
        	{"name":"port","required":true,"appendToPath":true}
        ],
      	"outparams":["sealed","progress"]
    },
    {"#":"Unseal Progress",
    
    	"apiEndPoint":"/v2/unseal-progress",
    	"vaultEndPoint":"http://<serverip>:<port>/v1/sys/seal-status",
    	"method":"GET",
    	"params":[
        	{"name":"serverip","required":true,"appendToPath":true},
        	{"name":"port","required":true,"appendToPath":true}
        ],
      	"outparams":["sealed","progress"]
    },
    	
	
	{"#" : "**** - dec'2017 - AppRole Create *****",
   	"apiEndPoint":"/auth/approle/role/create",
    	"vaultEndPoint":"/auth/approle/role/<role_name>",
    	"method":"POST",
      	"params":[
      		{"name":"role_name", "required":true, "appendToPath":true},
      		{"name":"policies" },
      		{"name":"bind_secret_id","value":"true"},
      		{"name":"bound_cidr_list"},
      		{"name":"secret_id_num_uses"},
      		{"name":"secret_id_ttl"},
      		{"name":"token_num_uses"},
      		{"name":"token_ttl"},
      		{"name":"token_max_ttl"}
        ]
    },
    
  	
  	{"#":"**** - dec'2017 - Read a AppRole *******",
    
    	"apiEndPoint":"/auth/approle/role/read",
    	"vaultEndPoint":"/auth/approle/role/<role_name>",
    	"method":"GET",
      	"params":[
      		{"name":"role_name", "required":true, "appendToPath":true}
        ],
                "outparams":["data"]
        
    },
	{"#":"**** - nov'2018' - Read list of AppRoles *******",
    
    	"apiEndPoint":"/auth/approle/role/list",
    	"vaultEndPoint":"/auth/approle/role?list=true",
    	"method":"GET",
        "outparams":["data/keys"]
        
    },
  	{"#":"**** - dec'2017 - Read a AppRole RoleID*******",
    
    	"apiEndPoint":"/auth/approle/role/readRoleID",
    	"vaultEndPoint":"/auth/approle/role/<role_name>/role-id",
    	"method":"GET",
      	"params":[
      		{"name":"role_name", "required":true, "appendToPath":true}
        ],
                "outparams":["data"]
        
    },
 

   {"#":"**** - dec'2017 - delete a AppRole *******",
    
    	"apiEndPoint":"/auth/approle/role/delete",
    	"vaultEndPoint":"/auth/approle/role/<role_name>",
    	"method":"DELETE",
      	"params":[
      		{"name":"role_name", "required":true, "appendToPath":true}
        ]
    },
  
	
	{"#" : "**** - dec'2017 - Create secret Id for Approle'****** ",
   	"apiEndPoint":"/auth/approle/secretid/create",
    	"vaultEndPoint":"/auth/approle/role/<role_name>/secret-id",
    	"method":"POST", 
      	"params":[
      		{"name":"role_name", "required":true, "appendToPath":true},
			{"name":"data","required":true},
            {"name":"cidr_list"}
        ],
                "outparams":["data"]
        
    },
    
  	{"#":"**** - dec'2017 - Read SecretID for AppRole*******",
    
    	"apiEndPoint":"/auth/approle/secretid/lookup",
    	"vaultEndPoint":"/auth/approle/role/<role_name>/secret-id",
    	"method":"POST",
      	"params":[
      		{"name":"role_name", "required":true, "appendToPath":true}
        ],
                "outparams":["data"]
        
    },
 
	  {"#":"**** - dec'2017 - Destroy  for AppRoler AppRole*******",
    
    	"apiEndPoint":"/auth/approle/secret/delete",
    	"vaultEndPoint":"/auth/approle/role/<role_name>/secret-id/destroy",
    	"method":"POST",
      	"params":[
      		{"name":"role_name", "required":true, "appendToPath":true},
      		{"name":"secret_id", "required":true}
        ]
    },
  
{"#" : "**** - dec'2017 - AppRole login  '****** ",
 	
    	"apiEndPoint":"/auth/approle/login",
    	"vaultEndPoint":"/auth/approle/login",
    	"method":"POST",
      	"params":[
        		{"name":"role_id", "required":true}, 
    	  		{"name":"secret_id","required":true}
 	    ],
        "outparams":["auth","data","lease_duration", "lease_id"]
    },

 	
	
	
	
	
	{"#" : "**** - dec'2017 - Simple User Password login for simple users *******",
 	
    	"apiEndPoint":"/auth/userpass/login",
    	"vaultEndPoint":"/auth/userpass/login/<username>",
    	"method":"POST",
      	"params":[
        		{"name":"username", "required":true,"appendToPath":true}, 
    	  		{"name":"password","required":true}
 	    ],
       "outparams":["auth/client_token","admin","access","auth/policies","auth/lease_duration"] 
    },

	{"#" : "**** - Used to renew the token *******",
 	
    	"apiEndPoint":"/auth/tvault/renew",
    	"vaultEndPoint":"/auth/token/renew-self",
    	"method":"POST",
        "outparams":["auth/client_token", "auth/policies","auth/lease_duration"] 
    },
    
	{"#" : "**** - Used to lookup the token *******",
 	
    	"apiEndPoint":"/auth/tvault/lookup",
    	"vaultEndPoint":"/auth/token/lookup-self",
    	"method":"GET",
        "outparams":["data/id","data/last_renewal_time","renewable","data/policies","data/creation_ttl", "data/meta/username"] 
    },
	{"#" : "**** - Used to revoke the token *******",
 	
    	"apiEndPoint":"/auth/tvault/revoke",
    	"vaultEndPoint":"/auth/token/revoke-self",
    	"method":"POST"
    },
   
     {"#":"**** - dec'2017 - Create / Update a USER *******",
    
    	"apiEndPoint":"/auth/userpass/create",
    	"vaultEndPoint":"/auth/userpass/users/<username>",
    	"method":"POST",
      	"params":[
      		{"name":"username", "required":true, "appendToPath":true},
      		{"name":"password","required":true},
      		{"name":"policies","required":true}
        ]
    },
  
  
     {"#":"**** - dec'2017 - Read a USER *******",
    
    	"apiEndPoint":"/auth/userpass/read",
    	"vaultEndPoint":"/auth/userpass/users/<username>",
    	"method":"GET",
      	"params":[
      		{"name":"username", "required":true, "appendToPath":true}
        ],
                "outparams":["data"]
        
    },
  
    {"#":"**** - dec'2017 - delete a USER *******",
    
    	"apiEndPoint":"/auth/userpass/delete",
    	"vaultEndPoint":"/auth/userpass/users/<username>",
    	"method":"DELETE",
      	"params":[
      		{"name":"username", "required":true, "appendToPath":true}
        ]
    },
  
	{"#" : "**** - dec'2017 - UPDATE Password for a USER '****** ",
 	
    	"apiEndPoint":"/auth/userpass/update",
    	"vaultEndPoint":"/auth/userpass/users/<username>/password",
    	"method":"POST",
      	"params":[
        		{"name":"username", "appendToPath":true}, 
    	  		{"name":"password","required":true}
 	    ],
        "outparams":["password"]
    },

   
	{"#" : "**** - dec'2017 - UPDATE POLICIES for a USER '****** ",
 	
    	"apiEndPoint":"/auth/userpass/updatepolicy",
    	"vaultEndPoint":"/auth/userpass/users/<username>",
    	"method":"POST",
      	"params":[
        		{"name":"username", "appendToPath":true}, 
    	  		{"name":"policies","required":true}
 	    ],
 	    	"outparams":["policies"]
  
    },

	{"#" : "**** - dec'2017 - LIST USERS '****** ",
 	
    	"apiEndPoint":"/auth/userpass/list",
    	"vaultEndPoint":"/auth/userpass/users?list=true",
    	"method":"GET",
 	"outparams":["data"]
    },
   
   
   
    
	{"#":"LDAP Login ",
	
    	"apiEndPoint":"/auth/ldap/login",
    	"vaultEndPoint":"/auth/ldap/login/<username>",
    	"method":"POST",
      	"params":[
        	{"name":"username","required":true,"appendToPath":true},
        	{"name":"password","required":true}
        ],
        "outparams":["auth/client_token","admin","access","auth/policies","auth/lease_duration"]
	},
	
	{"#":"Configuring LDAP Group",
    
    	"apiEndPoint":"/auth/ldap/groups/configure",
    	"vaultEndPoint":"/auth/ldap/groups/<groupname>",
    	"method":"POST",
      	"params":[
        	{"name":"groupname","required":true,"appendToPath":true},
        	{"name":"policies","required":true}
        ]
	},
	{"#":"**** Listing all LDAP Groups************",
    
    	"apiEndPoint":"/auth/ldap/groups/list",
    	"vaultEndPoint":"/auth/ldap/groups?list=true",
    	"method":"GET",
      	"outparams":["data/keys"]
	},
	
	{"#":"**** Fetch details of a configured LDAP group *****",
	
    	"apiEndPoint":"/auth/ldap/groups",
    	"vaultEndPoint":"/auth/ldap/groups/<groupname>",
    	"method":"GET",
    	"params":[
        	{"name":"groupname","required":true, "appendToPath":true}
        ],
      	"outparams":["data"]
	},
	
	{"#":"**** Deleting a LDAP Group  *****",
	
    	"apiEndPoint":"/auth/ldap/groups/delete",
    	"vaultEndPoint":"/auth/ldap/groups/<groupname>",
    	"method":"DELETE",
    	"params":[
        	{"name":"groupname","required":true, "appendToPath":true}
        ]
	},
	
	{"#":"**** Configuring an LDAP User *****",
	
    	"apiEndPoint":"/auth/ldap/users/configure",
    	"vaultEndPoint":"/auth/ldap/users/<username>",
    	"method":"POST",
      	"params":[
        	{"name":"username","required":true,"appendToPath":true},
        	{"name":"policies"},
        	{"name":"groups" }
        ]
	},
	
	{"#":"**** List all LDAP Users configured in vault *****",
	
    	"apiEndPoint":"/auth/ldap/users/list",
    	"vaultEndPoint":"/auth/ldap/users?list=true",
    	"method":"GET",
      	"outparams":["data/keys"]
	},

	{"#":"**** Fetch details of a configured LDAP user *****",
	
    	"apiEndPoint":"/auth/ldap/users",
    	"vaultEndPoint":"/auth/ldap/users/<username>",
    	"method":"GET",
    	"params":[
        	{"name":"username","required":true, "appendToPath":true}
        ],
      	"outparams":["data"]
	},
	
	{"#":"**** Deleting a LDAP User  *****",
	
    	"apiEndPoint":"/auth/ldap/users/delete",
    	"vaultEndPoint":"/auth/ldap/users/<username>",
    	"method":"DELETE",
    	"params":[
        	{"name":"username","required":true, "appendToPath":true}
        ]
	},
	
    {"#":"**** Reading a secret  *****",
    	"apiEndPoint":"/read",
    	"vaultEndPoint":"/<path>",
    	"method":"GET",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true}
        ],
        "outparams":["data"]
    },
    
     {"#":"**** Writing a secret  *****",
    	"apiEndPoint":"/write",
    	"vaultEndPoint":"/<path>",
    	"method":"POST",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true},
        	{"name":"data","required":true}
        ]
    },
     {"#":"**** Create SDB  *****",
    	"apiEndPoint":"/sdb/create",
    	"vaultEndPoint":"/<path>",
    	"method":"POST",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true},
        	{"name":"data","required":true}
        ]
    },
     {"#":"**** Create SDB  *****",
    	"apiEndPoint":"/sdb/createfolder",
    	"vaultEndPoint":"/<path>",
    	"method":"POST",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true},
        	{"name":"data","required":true}
        ]
    },
     {"#":"**** Create SDB  *****",
    	"apiEndPoint":"/sdb/update",
    	"vaultEndPoint":"/<path>",
    	"method":"POST",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true},
        	{"name":"data","required":true}
        ]
    },
    
    {"#":"Deleting an exisiing SDB",
    
    	"apiEndPoint":"/sdb/delete",
    	"vaultEndPoint":"/<path>",
    	"method":"POST",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true}
        ]
    }
    ,
    {"#":"Getting SDB Info",
    
    	"apiEndPoint":"/sdb",
    	"vaultEndPoint":"/<path>",
    	"method":"GET",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true}
        ],
        "outparams":["data"]
    }
    ,
    
     {"#":"**** Listing all SDBs *****",
    	"apiEndPoint":"/sdb/list",
    	"vaultEndPoint":"/<path>?list=true",
    	"method":"GET",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true}
        ],
         "outparams":["data/keys"]
    },
    { "#":"**** Deleting a secret  *****",
    	"apiEndPoint":"/delete",
    	"vaultEndPoint":"/<path>",
    	"method":"DELETE",
      	"params":[
        	{"name":"path","required":true, "appendToPath":true}
        ]
    },
    {"#":"Creating a policy ",
    
    	"apiEndPoint":"/access/create",
    	"vaultEndPoint":"/sys/policy/<accessid>",
    	"method":"POST",
      	"params":[
      		{"name":"accessid","required":true,"appendToPath":true},
        	{"name":"access","required":false},
        	{"name":"rules"}
        ]
    },
    { "#":"****  List all policies  *****",
    	"apiEndPoint":"/access/list",
    	"vaultEndPoint":"/sys/policy",
    	"method":"GET",
         "outparams":["policies"]
    },
     {
      "#":"****  Update Policy *****",
    	"apiEndPoint":"/access/update",
    	"vaultEndPoint":"/sys/policy/<accessid>",
    	"method":"POST",
      	"params":[
      		{"name":"accessid","required":true,"appendToPath":true},
        	{"name":"access","required":false},
        	{"name":"rules"}
        ]
     },
	{
		"#":"****  Update Policy with capability*****",
		"apiEndPoint":"/access/capability/update",
		"vaultEndPoint":"/sys/policy/<accessid>",
		"method":"POST",
		"params":[
			{"name":"accessid","required":true,"appendToPath":true},
			{"name":"rules","required":true}
		]
	},
     { "#":"**** Fetch Policy Info  *****",
    	"apiEndPoint":"/access",
    	"vaultEndPoint":"/sys/policy/<accessid>",
    	"method":"GET",
      	"params":[
      		{"name":"accessid","required":true,"appendToPath":true}
        ],
         "outparams":["name","rules"]
    },
    
 	{"#" : "**** Deleting a policy ****** ",
 	
    	"apiEndPoint":"/access/delete",
    	"vaultEndPoint":"/sys/policy/<accessid>",
    	"method":"DELETE",
      	"params":[
      		{"name":"accessid","required":true,"appendToPath":true}
        ]
    },
    
 	{"#" : "**** aws login ****** ",
 	
    	"apiEndPoint":"/auth/aws/login",
    	"vaultEndPoint":"/auth/aws/login",
    	"method":"POST",
      	"params":[
      		{"name":"role","required":true},
      		{"name":"pkcs7","required":true},
      		{"name":"nonce"}
        ],
        "outparams":["auth/client_token","auth/policies","access"]
    },
 	{"#" : "**** aws iam client configuration ****** ",
 	
    	"apiEndPoint":"/auth/aws/config/configureclient",
    	"vaultEndPoint":"/auth/aws/config/client",
    	"method":"POST",
      	"params":[
      		{"name":"access_key","required":true},
      		{"name":"secret_key","required":true}
        ]
    },
 	{"#" : "**** reads aws iam client configuration ****** ",
 	
    	"apiEndPoint":"/auth/aws/config/readclientconfig",
    	"vaultEndPoint":"/auth/aws/config/client",
    	"method":"GET",
      	"outparams":["data/access_key","data/secret_key"]
    },
 	{"#" : "**** aws iam create STS Role ****** ",
 	
    	"apiEndPoint":"/auth/aws/config/sts/create",
    	"vaultEndPoint":"/auth/aws/config/sts/<account_id>",
    	"method":"POST",
      	"params":[
      		{"name":"account_id","required":true,"appendToPath":true},
        	{"name":"sts_role","required":false}
        ]
    },
 	{"#" : "**** aws iam create IAM Role tag****** ",
 	
    	"apiEndPoint":"/auth/aws/iam/role/create",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"POST",
      	"params":[
      		{"name":"role","required":true,"appendToPath":true},
        	{"name":"auth_type"},
        	{"name":"bound_iam_principal_arn"},
        	{"name":"bound_iam_role_arn"},
        	{"name":"inferred_entity_type"},
        	{"name":"inferred_aws_region"},
        	{"name":"policies"},
        	{"name":"resolve_aws_unique_ids"}
        ]
    },
 	{"#" : "**** aws iam login ****** ",
 	
    	"apiEndPoint":"/auth/aws/iam/login",
    	"vaultEndPoint":"/auth/aws/login",
    	"method":"POST",
      	"params":[
      		{"name":"iam_http_request_method","required":true},
        	{"name":"iam_request_url","required":true},
        	{"name":"iam_request_body","required":true},
        	{"name":"iam_request_headers"},
        	{"name":"role"},
        	{"name":"resolve_aws_unique_ids"}
        ],
        "outparams":["auth/client_token","auth/policies","auth/lease_duration"]
    },
    
 	{"#" : "**** aws role creation ****** ",
 	
    	"apiEndPoint":"/auth/aws/roles/create",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"POST",
      	"params":[
      		{"name":"role","required":true, "appendToPath":true},
      		{"name":"auth_type"},
      		{"name":"bound_ami_id"},
      		{"name":"bound_account_id"},
      		{"name":"bound_region"},
      		{"name":"bound_vpc_id"},
      		{"name":"bound_subnet_id"},
      		{"name":"bound_iam_role_arn"},
      		{"name":"bound_iam_instance_profile_arn"},
      		{"name":"policies" },
      		{"name":"bound_iam_principal_arn"},
      		{"name":"resolve_aws_unique_ids"}
        ]
    },
    
    
 	{"#" : "**** aws role update ****** ",
 	
    	"apiEndPoint":"/auth/aws/roles/update",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"POST",
      	"params":[
      		{"name":"auth_type","value":"ec2"},
      		{"name":"role","required":true, "appendToPath":true},
      		{"name":"bound_ami_id"},
      		{"name":"bound_account_id"},
      		{"name":"bound_region"},
      		{"name":"bound_vpc_id"},
      		{"name":"bound_subnet_id"},
      		{"name":"bound_iam_role_arn"},
      		{"name":"bound_iam_instance_profile_arn"},
      		{"name":"policies", "required":"true"}
        ]
    },
     	{"#" : "**** aws role update ****** ",
 	
    	"apiEndPoint":"/auth/aws/iam/roles/update",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"POST",
      	"params":[
      		{"name":"auth_type","value":"iam"},
      		{"name":"role","required":true, "appendToPath":true},
      		{"name":"bound_iam_principal_arn"},
      		{"name":"policies", "required":"true"},
      		{"name":"resolve_aws_unique_ids"}
        ]
    },
    
    {"#" : "**** aws role delete ****** ",
 	
    	"apiEndPoint":"/auth/aws/roles/delete",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"DELETE",
      	"params":[
      		{"name":"role","required":true, "appendToPath":true}
        ]
    },
    {"#" : "**** aws iam role delete ****** ",
 	
    	"apiEndPoint":"/auth/aws/iam/roles/delete",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"DELETE",
      	"params":[
      		{"name":"role","required":true, "appendToPath":true}
        ]
    },
    
     {"#" : "**** Fetch aws role info  ****** ",
 	
    	"apiEndPoint":"/auth/aws/roles",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"GET",
      	"params":[
      		{"name":"role","required":true, "appendToPath":true}
        ],
         "outparams":["data/auth_type", "data/bound_account_id","data/bound_ami_id",
         			  "data/bound_iam_instance_profile_arn","data/bound_iam_principal_arn",
         			  "data/bound_iam_role_arn","data/bound_vpc_id",
         			  "data/bound_subnet_id","data/bound_region",
         			  "data/policies"]
    },
     {"#" : "**** Fetch aws iam role info  ****** ",
 	
    	"apiEndPoint":"/auth/aws/iam/roles",
    	"vaultEndPoint":"/auth/aws/role/<role>",
    	"method":"GET",
      	"params":[
      		{"name":"role","required":true, "appendToPath":true}
        ],
         "outparams":["data/auth_type", "data/bound_ami_id","data/role_tag","data/policies",
         			  "data/bound_iam_principal_arn","data/bound_iam_role_arn",
         			  "data/max_ttl","data/disallow_reauthentication",
         			  "data/allow_instance_migration","data/resolve_aws_unique_ids"
         			  ]
    },
    {"#" : "**** Fetch aws roles  ****** ",
 	
    	"apiEndPoint":"/auth/aws/roles/list",
    	"vaultEndPoint":"/auth/aws/roles?list=true",
    	"method":"GET",
         "outparams":["data/keys"]
    },
    {"#" : "**** Fetch aws iam roles  ****** ",
 	
    	"apiEndPoint":"/auth/aws/iam/roles/list",
    	"vaultEndPoint":"/auth/aws/roles?list=true",
    	"method":"GET",
         "outparams":["data/keys"]
    },
    {"#" : "**** - Delete Secret_Ids for a given AppRole '****** ",
 	
    	"apiEndPoint":"/auth/approle/role/delete/secretids",
    	"vaultEndPoint":"/auth/approle/role/<role_name>/secret-id-accessor/destroy",
    	"method":"POST",
      	"params":[
        		{"name":"role_name", "appendToPath":true},
        		{"name":"secret_id_accessor","required":true}
 	    ]
    },
    {"#" : "**** - Read accessors of all the SecretIDs issued against the AppRole '****** ",
 	
    	"apiEndPoint":"/auth/approle/role/accessors/list",
    	"vaultEndPoint":"/auth/approle/role/<role_name>/secret-id?list=true",
    	"method":"GET",
      	"params":[
        		{"name":"role_name", "required":true, "appendToPath":true}
 	    ],
 	    "outparams":["data/keys"]
    },
    {"#":"**** - Read list of AppRoles created by a user *******",
    
    	"apiEndPoint":"/auth/approles/rolesbyuser/list",
    	"vaultEndPoint":"/<path>?list=true",
    	"method":"GET",
    	"params":[
        	{"name":"path","required":true, "appendToPath":true}
        ],
        "outparams":["data/keys"]
        
    },
	{"#" : "**** Onboard AD Service Account ****** ",
 	
    	"apiEndPoint":"/ad/serviceaccount/onboard",
    	"vaultEndPoint":"/ad/roles/<role_name>",
    	"method":"POST",
      	"params":[
      		{"name":"role_name","required":true, "appendToPath":true},
      		{"name":"service_account_name"},
      		{"name":"ttl"}
        ]
    },
	{"#" : "**** To get list of onboarded service accounts ****** ",
 	
    	"apiEndPoint":"/ad/serviceaccount/onboardedlist",
    	"vaultEndPoint":"/ad/roles?list=true",
    	"method":"GET",
		"outparams":["data/keys"]
    },
	{"#" : "**** Onboard AD Service Account ****** ",
 	
    	"apiEndPoint":"/ad/serviceaccount/offboard",
    	"vaultEndPoint":"/ad/roles/<role_name>",
    	"method":"DELETE",
      	"params":[
      		{"name":"role_name","required":true, "appendToPath":true}
        ]
    },
	{"#" : "**** Reset Service Account Password****** ",
 	
		"apiEndPoint":"/ad/serviceaccount/resetpwd",
    	"vaultEndPoint":"/ad/creds/<role_name>",
    	"method":"GET",
    	"params":[
      		{"name":"role_name","required":true, "appendToPath":true}
  		],
      	"outparams":["data/current_password", "data/last_password", "data/username"]
    },
	{"#" : "**** Read Service Account Password****** ",

		"apiEndPoint":"/ad/serviceaccount/readpwd",
		"vaultEndPoint":"/ad/creds/<role_name>",
		"method":"GET",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true}
		],
		"outparams":["data/current_password", "data/last_password", "data/username"]
	},
	{"#" : "**** Get Onboarded Service Account details ****** ",
 	
    	"apiEndPoint":"/ad/serviceaccount/details",
    	"vaultEndPoint":"/ad/roles/<role_name>",
    	"method":"GET",
      	"params":[
      		{"name":"role_name","required":true, "appendToPath":true}
        ],
      	"outparams":["data/current_password", "data/last_password", "data/service_account_name", "data/ttl", "data/last_vault_rotation"]
    },
	{"#" : "**** aws role creation with policy document****** ",

		"apiEndPoint":"/aws/roles/create",
		"vaultEndPoint":"/aws/roles/<name>",
		"method":"POST",
		"params":[
			{"name":"name","required":true, "appendToPath":true},
			{"name":"credential_type", "required": true},
			{"name":"policy_document", "required": true}
		]
	},
	{"#" : "**** get temporary credentials****** ",

		"apiEndPoint":"/aws/creds/",
		"vaultEndPoint":"/aws/creds/<role_name>",
		"method":"GET",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true}
		],
		"outparams":["lease_id", "lease_duration", "lease_renewable", "data/access_key", "data/secret_key", "data/security_token"]
	},
	{"#" : "**** Delete aws role****** ",

		"apiEndPoint":"/aws/roles/",
		"vaultEndPoint":"/aws/roles/<role_name>",
		"method":"DELETE",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true}
		]
	},
	{"#" : "**** get temporary credentials for MySql db****** ",

		"apiEndPoint":"/database/creds/",
		"vaultEndPoint":"/database/creds/<role_name>",
		"method":"GET",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true}
		],
		"outparams":["lease_id", "lease_duration", "renewable", "data/username", "data/password"]
	},
	{"#" : "**** create dynamic database role****** ",

		"apiEndPoint":"/database/roles/create/",
		"vaultEndPoint":"/database/roles/<role_name>",
		"method":"POST",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true},
			{"name":"db_name","required":true},
			{"name":"creation_statements","required":true},
			{"name":"default_ttl"},
			{"name":"max_ttl"},
			{"name":"revocation_statements"},
			{"name":"rollback_statements"},
			{"name":"renew_statements"}
		]
	},
	{"#" : "**** create static database role****** ",

		"apiEndPoint":"/database/static-roles/create/",
		"vaultEndPoint":"/database/static-roles/<name>",
		"method":"POST",
		"params":[
			{"name":"name","required":true, "appendToPath":true},
			{"name":"username","required":true},
			{"name":"rotation_period","required":true},
			{"name":"db_name","required":true},
			{"name":"rotation_statements"}
		]
	},
	{"#" : "**** get static credentials for database****** ",

		"apiEndPoint":"/database/static-creds/",
		"vaultEndPoint":"/database/static-creds/<role_name>",
		"method":"GET",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true}
		],
		"outparams":["data/username","data/password","data/last_vault_rotation","data/rotation_period","data/ttl"]
	},
	{"#" : "**** Read database role ****** ",

		"apiEndPoint":"/database/roles/",
		"vaultEndPoint":"/database/roles/<role_name>",
		"method":"GET",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true}
		],
		"outparams":["data"]
	},
	{"#" : "**** List database roles ****** ",

		"apiEndPoint":"/database/roles/list/",
		"vaultEndPoint":"/database/roles?list=true",
		"method":"GET",
		"outparams":["auth","data","lease_duration","lease_id","renewable"]
	},
	{"#":"**** Delete database role *******",

		"apiEndPoint":"/database/roles/delete/",
		"vaultEndPoint":"/database/roles/<role_name>",
		"method":"DELETE",
		"params":[
			{"name":"role_name", "required":true, "appendToPath":true}
		]
	},
	{"#" : "**** Read static database role ****** ",

		"apiEndPoint":"/database/static-roles/",
		"vaultEndPoint":"/database/static-roles/<role_name>",
		"method":"GET",
		"params":[
			{"name":"role_name","required":true, "appendToPath":true}
		],
		"outparams":["data"]
	},
	{"#" : "**** List static database roles ****** ",

		"apiEndPoint":"/database/static-roles/list/",
		"vaultEndPoint":"/database/static-roles?list=true",
		"method":"GET",
		"outparams":["auth","data"]
	},
	{"#":"**** Delete static database role *******",

		"apiEndPoint":"/database/static-roles/delete/",
		"vaultEndPoint":"/database/static-roles/<role_name>",
		"method":"DELETE",
		"params":[
			{"name":"role_name", "required":true, "appendToPath":true}
		]
	},
	{"#" : "**** Rotate static role credentials ****** ",

		"apiEndPoint":"/database/rotate-role/",
		"vaultEndPoint":"/database/rotate-role/<name>",
		"method":"POST",
		"params":[
			{"name":"name","required":true, "appendToPath":true}
		]
	},
	{"#":"Okta Login ",

		"apiEndPoint":"/auth/okta/login",
		"vaultEndPoint":"/auth/okta/login/<username>",
		"method":"POST",
		"params":[
			{"name":"username","required":true,"appendToPath":true},
			{"name":"password","required":true}
		],
		"outparams":["auth/client_token","admin","access","auth/policies","auth/lease_duration"]
	},

	{"#":"**** Fetch details of a configured Okta user *****",

		"apiEndPoint":"/auth/okta/users",
		"vaultEndPoint":"/auth/okta/users/<username>",
		"method":"GET",
		"params":[
			{"name":"username","required":true, "appendToPath":true}
		],
		"outparams":["data"]
	},

	{"#" : "**** - UPDATE POLICIES for a USER Okta'****** ",

		"apiEndPoint":"/auth/okta/users/configure",
		"vaultEndPoint":"/auth/okta/users/<username>",
		"method":"POST",
		"params":[
			{"name":"username", "appendToPath":true},
			{"name":"policies","required":true}
		],
		"outparams":["policies"]

	},

	{"#":"**** Fetch details of a configured Okta group *****",

		"apiEndPoint":"/auth/okta/groups",
		"vaultEndPoint":"/auth/okta/groups/<groupname>",
		"method":"GET",
		"params":[
			{"name":"groupname","required":true, "appendToPath":true}
		],
		"outparams":["data"]
	},
	{"#":"Configuring Okta Group",

		"apiEndPoint":"/auth/okta/groups/configure",
		"vaultEndPoint":"/auth/okta/groups/<groupname>",
		"method":"POST",
		"params":[
			{"name":"groupname","required":true,"appendToPath":true},
			{"name":"policies","required":true}
		]
	}

]

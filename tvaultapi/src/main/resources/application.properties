vault.api.url=http://localhost:8200/v1
server.contextPath=/vault
vault.port=8200
vault.auth.method=userpass

vault.secret.key.whitelistedchars=[a-z0-9_]+
vault.approle.name.whitelistedchars=[a-z0-9_]+
vault.sdb.name.whitelistedchars=[a-z0-9_-]+

ldap.url=
ldap.base:
ldap.userdn:
ldap.username:
ldap.password:

ad.url=
ad.base:
ad.userdn:
ad.username:
ad.password:
ad.svc.acc.suffix=
ad.managerbase:

safe.quota=20

ad.passwordrotation.enable=true
selfservice.enable=true

selfservice.username=c2FmZWFkbWlu
selfservice.password=c2FmZWFkbWlu
selfservice.tokengenerator=approle
selfservice.ssfilelocation=/opt/tvault/hcorp

SafesController.getFolders.value=To get list of folders of a Safe
SafesController.getFolders.notes=To get list of folders of a Safe

SafesController.deleteGroupFromSafe.value=To remove a group from safe
SafesController.deleteGroupFromSafe.notes=To remove a group from safe

SafesController.getInfo.value=To get sdb information
SafesController.getInfo.notes=To get sdb information

SafesController.createSafe.value=To create Safe and associate basic policies
SafesController.createSafe.notes=This creates Safe

SafesController.updateSafe.value=To update Safe and its associated users, groups, roles
SafesController.updateSafe.notes=This updates Safe and its associated users, groups, roles

SafesController.deleteSafe.value=To delete Safe and its associated users, groups, roles
SafesController.deleteSafe.notes=This deletes Safe

SafesController.addUserToSafe.value=To add a user to Safe
SafesController.addUserToSafe.notes=This adds a user to Safe

SafesController.removeUserFromSafe.value=To remove a user from Safe
SafesController.removeUserFromSafe.notes=This removes a user from Safe

SafesController.addGroupToSafe.value=To add a group to Safe
SafesController.addGroupToSafe.notes=This adds a group to Safe

SafesController.removeGroupFromSafe.value=To remove a group from Safe
SafesController.removeGroupFromSafe.notes=This removes a group from Safe

SafesController.getSafe.value=To get list of Safes
SafesController.getSafe.notes=This gets the list of Safes

VaultAuthControllerV2.login.value=To login to TVault
VaultAuthControllerV2.login.notes=To login to TVault using an authentication method set in application.properties file

VaultAuthControllerV2.renew.value=To renew a user token
VaultAuthControllerV2.renew.notes=To renew a user token before the expiry

VaultAuthControllerV2.lookup.value=To lookup a user token
VaultAuthControllerV2.lookup.notes=To lookup a details for given user token

VaultAuthControllerV2.revoke.value=To revoke a token
VaultAuthControllerV2.revoke.notes=To revoke the access for a given token

UserPassControllerV2.createUser.value=To create user
UserPassControllerV2.createUser.notes=To create user for use with username/password authentication

UserPassControllerV2.readUser.value=To read user
UserPassControllerV2.readUser.notes=To get user details for a user from username/password authentication

UserPassControllerV2.deleteUser.value=To delete user
UserPassControllerV2.deleteUser.notes=To delete user from username/password authentication

UserPassControllerV2.updatePassword.value=To update user (password)
UserPassControllerV2.updatePassword.notes=To update user (password) for user with username/password authentication

UserPassControllerV2.listUsers.value=To get list of users
UserPassControllerV2.listUsers.notes=To get list of users from username/password authentication

UserPassControllerV2.login.value=To login using userpass authentication
UserPassControllerV2.login.notes=To login a user using username/password with userpass authentication

SysControllerV2.checkVaultHealth.value=To get Vault health
SysControllerV2.checkVaultHealth.notes=To get Vault health

SysControllerV2.unseal.value=To unseal vault
SysControllerV2.unseal.notes=To get Vault health

SysControllerV2.unsealProgress.value=To get unseal progress
SysControllerV2.unsealProgress.notes=To get unseal progress status


AppRoleControllerV2.createAppRole.value=To Create AppRole
AppRoleControllerV2.createAppRole.notes=To Create AppRole

AppRoleControllerV2.associateApprole.value=To associate an AppRole to a Safe
AppRoleControllerV2.associateApprole.notes=To associate an AppRole to a Safe

AppRoleControllerV2.readAppRole.value=To read AppRole
AppRoleControllerV2.readAppRole.notes=To read AppRole

AppRoleControllerV2.listAppRoles.value=To list AppRoles
AppRoleControllerV2.listAppRoles.notes=To list AppRoles

AppRoleControllerV2.readAppRoleRoleId.value=To read AppRole role_id
AppRoleControllerV2.readAppRoleRoleId.notes=To read AppRole role_id

AppRoleControllerV2.deleteAppRole.value=To delete AppRole
AppRoleControllerV2.deleteAppRole.notes=To delete AppRole

AppRoleControllerV2.createsecretId.value=To create secret_id for AppRole
AppRoleControllerV2.createsecretId.notes=To create secret_id for AppRole

AppRoleControllerV2.deleteSecretId.value=To delete secret_id for AppRole
AppRoleControllerV2.deleteSecretId.notes=To delete secret_id for AppRole

AppRoleControllerV2.readSecretId.value=To read AppRole secret_id
AppRoleControllerV2.readSecretId.notes=To read AppRole secret_id

AppRoleControllerV2.login.value=To Login with AppRole using role_id and secret_id
AppRoleControllerV2.login.notes=To Login with AppRole using role_id and secret_id

AccessControllerV2.createPolicy.value=To create policy
AccessControllerV2.createPolicy.notes=To create policy

AccessControllerV2.updatePolicy.value=To update policy
AccessControllerV2.updatePolicy.notes=To update policy

AccessControllerV2.listAllPolices.value=To list all existing policies
AccessControllerV2.listAllPolices.notes=To list all existing policies

AccessControllerV2.getPolicyInfo.value=To get details of a policy
AccessControllerV2.getPolicyInfo.notes=To get details of a policy

AccessControllerV2.deletePolicyInfo.value=To delete a policy
AccessControllerV2.deletePolicyInfo.notes=To delete a policy

AWSAuthControllerV2.authenticateEC2.value=To login/fetch client token using aws ec2 pkcs7 document
AWSAuthControllerV2.authenticateEC2.notes=To login/fetch client token using aws ec2 pkcs7 document

AWSAuthControllerV2.createRole.value=To create an aws app role
AWSAuthControllerV2.createRole.notes=To create an aws app role

AWSAuthControllerV2.updateRole.value=To update an aws app role
AWSAuthControllerV2.updateRole.notes=To update an aws app role

AWSAuthControllerV2.deleteRole.value=To delete an existing role
AWSAuthControllerV2.deleteRole.notes=To delete an existing role

AWSAuthControllerV2.fetchRole.value=To fetch information for an aws approle
AWSAuthControllerV2.fetchRole.notes=To fetch information for an aws approle

AWSAuthControllerV2.listRoles.value=To get list of AWS roles
AWSAuthControllerV2.listRoles.notes=To get list of AWS roles


LDAPAuthControllerV2.authenticateLdap.value=To authenticate against LDAP
LDAPAuthControllerV2.authenticateLdap.notes=To authenticate against LDAP

LDAPAuthControllerV2.configureLdapGroup.value=To configure a LDAP group in vault
LDAPAuthControllerV2.configureLdapGroup.notes=To configure a LDAP group in vault

LDAPAuthControllerV2.listLdapGroups.value=To get all existing LDAP Groups configured in Vault
LDAPAuthControllerV2.listLdapGroups.notes=To get all existing LDAP Groups configured in Vault

LDAPAuthControllerV2.fetchLdapGroup.value=To retrieve LDAP groups
LDAPAuthControllerV2.fetchLdapGroup.notes=To retrieve LDAP groups

LDAPAuthControllerV2.deleteLdapGroup.value=To delete LDAP group
LDAPAuthControllerV2.deleteLdapGroup.notes=To delete LDAP group

LDAPAuthControllerV2.configureLdapUser.value=To configure a LDAP user
LDAPAuthControllerV2.configureLdapUser.notes=To configure a LDAP user

LDAPAuthControllerV2.listLdapUsers.value=To list all configured LDAP Users
LDAPAuthControllerV2.listLdapUsers.notes=To list all configured LDAP Users

LDAPAuthControllerV2.fetchLdapUser.value=To get the details of LDAP User configured in vault
LDAPAuthControllerV2.fetchLdapUser.notes=To get the details of LDAP User configured in vault

LDAPAuthControllerV2.deleteLdapUser.value=To delete a LDAP User
LDAPAuthControllerV2.deleteLdapUser.notes=To delete a LDAP User

SecretControllerV2.readFromVault.value=To read secret from vault
SecretControllerV2.readFromVault.notes=To read secret from vault

SecretControllerV2.write.value=To write secret into vault
SecretControllerV2.write.notes=<b>Secret Key: </b>The allowed characters for secret key(s) are alphabets, numbers and underscores only. <br>\
<b>Secret Value: </b>Generally, single line text will be accpeted as the secret value.\
If you want to input the secret values with multiple text, then the secret value has to be combined into a single line using appropriate techniques/tools. \
If the secret value contains any JSON unsafe characters such as newlines, backslashs, single quotes, double quotes, then the secret has to be JSON escaped before writing into vault.<br>\
<b>Sample Input JSON: </b>{"path":"shared/mysafe01/myfolder","data":{"secret1":"value1","secret2":"value2"}}

SecretControllerV2.deleteFromVault.value=To delete secret from vault
SecretControllerV2.deleteFromVault.notes=To delete secret from vault

SecretControllerV2.readFromVaultRecursive.value=To read all folders and secrets 
SecretControllerV2.readFromVaultRecursive.notes=To read all folders and secrets 

SecretControllerV2.readFoldersAndSecrets.value=To read folders and secrets for a given folder
SecretControllerV2.readFoldersAndSecrets.notes=To read folders and secrets for a given folder

DirectoryServiceControllerV2.searchByUPN.value=Search for user(s) by User Principal Name
DirectoryServiceControllerV2.searchByUPN.notes=Search for user(s) by User Principal Name

DirectoryServiceControllerV2.searchByCorpId.value=Search for user(s) by CorpId
DirectoryServiceControllerV2.searchByCorpId.notes=Search for user(s) by CorpId

DirectoryServiceControllerV2.searchByGroup.value=Search for group(s) by group name
DirectoryServiceControllerV2.searchByGroup.notes=Search for group(s) by group name

AWSIAMAuthControllerV2.configureClient.value=To configure the credentials required to perform API calls to AWS
AWSIAMAuthControllerV2.configureClient.notes=To configure the credentials required to perform API calls to AWS

AWSIAMAuthControllerV2.readClientConfiguration.value=To return the previously configured AWS access credentials
AWSIAMAuthControllerV2.readClientConfiguration.notes=To return the previously configured AWS access credentials

AWSIAMAuthControllerV2.createStsRole.value=To allow explicit association of STS roles to satellite AWS accounts
AWSIAMAuthControllerV2.createStsRole.notes=To allow explicit association of STS roles to satellite AWS accounts

AWSIAMAuthControllerV2.createIamRole.value=To register am IAM role with Vault
AWSIAMAuthControllerV2.createIamRole.notes=To register am IAM role with Vault

AWSIAMAuthControllerV2.fetchRole.value=To return a previously registered role configuration
AWSIAMAuthControllerV2.fetchRole.notes=To return a previously registered role configuration

AWSIAMAuthControllerV2.listRoles.value=To list Roles all the roles that are registered
AWSIAMAuthControllerV2.listRoles.notes=To list Roles all the roles that are registered

AWSIAMAuthControllerV2.deleteRole.value=To deletes the previously registered role
AWSIAMAuthControllerV2.deleteRole.notes=To deletes the previously registered role

AWSIAMAuthControllerV2.authenticateIAM.value=To login/fetch a client token using AWS IAM authentication 
AWSIAMAuthControllerV2.authenticateIAM.notes=To login/fetch a client token using AWS IAM authentication

SafesController.addAWSRoleToSafe.value=To add AWS role to a Safe
SafesController.addAWSRoleToSafe.notes=To add AWS role to a Safe

SafesController.addAWSIAMRoleToSafe.value=To add AWS IAM role to safe
SafesController.addAWSIAMRoleToSafe.notes=To add AWS IAM role to safe

AWSIAMAuthControllerV2.removeIamRole.value=To remove IAM role from Safe 
AWSIAMAuthControllerV2.removeIamRole.notes=To remove IAM role from Safe 

AWSIAMAuthControllerV2.updateRole.value=To update an IAM role
AWSIAMAuthControllerV2.updateRole.notes=To update an IAM role

SafesController.deleteAWSRoleFromSafe.value=Delete AWS role from SDB
SafesController.deleteAWSRoleFromSafe.notes=Delete AWS role from SDB

AWSIAMAuthControllerV2.authenticateAWS.value=Authenticate using AWS methods EC2/IAM
AWSIAMAuthControllerV2.authenticateAWS.notes=Authenticate using AWS methods EC2/IAM

SafesController.deleteAWSPermissionFromSafe.value=Delete AWS permission from SDB
SafesController.deleteAWSPermissionFromSafe.notes=Delete AWS permission from SDB

SelfSupportController.deleteGroupFromSafe.value=To remove a group from safe
SelfSupportController.deleteGroupFromSafe.notes=To remove a group from safe

SelfSupportController.addGroupToSafe.value=To add a group to Safe
SelfSupportController.addGroupToSafe.notes=This adds a group to Safe

SelfSupportController.deleteSafe.value=To delete Safe and its associated users, groups, roles
SelfSupportController.deleteSafe.notes=This deletes Safe

SelfSupportController.updateSafe.value=To update Safe and its associated users, groups, roles
SelfSupportController.updateSafe.notes=This updates Safe and its associated users, groups, roles

SelfSupportController.addAWSRoleToSafe.value=To add AWS role to a Safe
SelfSupportController.addAWSRoleToSafe.notes=To add AWS role to a Safe

SelfSupportController.deleteAWSRoleFromSafe.value=Delete AWS role from SDB
SelfSupportController.deleteAWSRoleFromSafe.notes=Delete AWS role from SDB

SelfSupportController.deleteAWSPermissionFromSafe.value=Delete AWS permission from SDB
SelfSupportController.deleteAWSPermissionFromSafe.notes=Delete AWS permission from SDB

SelfSupportController.associateApprole.value=To associate an AppRole to a Safe
SelfSupportController.associateApprole.notes=To associate an AppRole to a Safe

SelfSupportController.deleteApproleFromSafe.value=To delete an AppRole from a Safe
SelfSupportController.deleteApproleFromSafe.notes=To delete an AppRole from a Safe

SelfSupportController.createRole.value=To create an aws app role
SelfSupportController.createRole.notes=To create an aws app role

SelfSupportController.createIamRole.value=To register am IAM role with Vault
SelfSupportController.createIamRole.notes=To register am IAM role with Vault

SelfSupportController.updateRole.value=To update an aws app role
SelfSupportController.updateRole.notes=To update an aws app role

SelfSupportController.updateIAMRole.value=To update an aws app role
SelfSupportController.updateIAMRole.notes=To update an aws app role

SelfSupportController.authorized.value=To check if the user has permission on the path
SelfSupportController.authorized.notes=To check if the user has permission on the path

SelfSupportController.getInfoAsPowerUser.value=To get safe info
SelfSupportController.getInfoAsPowerUser.notes=To get safe info

SelfSupportController.createSafe.value=To create Safe and associate basic policies
SelfSupportController.createSafe.notes=This creates Safe

SelfSupportController.getFolders.value=To get list of folders of a Safe
SelfSupportController.getFolders.notes=To get list of folders of a Safe

SelfSupportController.addUserToSafe.value=To add a user to Safe
SelfSupportController.addUserToSafe.notes=This add a user to the safe

SelfSupportController.removeUserFromSafe.value=To remove a user from Safe
SelfSupportController.removeUserFromSafe.notes=This removes a user from Safe

SelfSupportController.getSafeAsPowerUser.value=To get list of Safes
SelfSupportController.getSafeAsPowerUser.notes=This gets the list of Safes

AppRoleControllerV3.createAppRole.value=To Create AppRole
AppRoleControllerV3.createAppRole.notes=To Create AppRole

AppRoleControllerV3.deleteAppRole.value=To delete AppRole
AppRoleControllerV3.deleteAppRole.notes=To delete AppRole

SelfSupportController.getsafes.value=To get list of safes having read/write permission
SelfSupportController.getsafes.notes=To get list of safes having read/write permission

SelfSupportController.deleteSecretIds.value=To delete secret_ids associated with an AppRole
SelfSupportController.deleteSecretIds.notes=To delete secret_ids associated with an AppRole

SelfSupportController.readAppRoleRoleId.value=To read AppRole role_id for an AppRole
SelfSupportController.readAppRoleRoleId.notes=To read AppRole role_id for an AppRole

SelfSupportController.readAppRoleSecretId.value=To read AppRole secret_id for an AppRole
SelfSupportController.readAppRoleSecretId.notes=To read AppRole secret_id for an AppRole

SelfSupportController.readAppRoleDetails.value=To read all the information of an AppRole including its metadata, role_id, accessor_ids
SelfSupportController.readAppRoleDetails.notes=To read all the information of an AppRole including its metadata, role_id, accessor_ids

SelfSupportController.readAppRole.value=To read basic information of an AppRole
SelfSupportController.readAppRole.notes=To read basic information of an AppRole

SelfSupportController.readAccessorsOfSecretIds.value=To get list of accessors of all the secret_ids issued against the AppRole
SelfSupportController.readAccessorsOfSecretIds.notes=To get list of accessors of all the secret_ids issued against the AppRole

SelfSupportController.listAppRoles.value=To list AppRoles
SelfSupportController.listAppRoles.notes=To list AppRoles

SelfSupportController.updateAppRole.value=To update an existing AppRole
SelfSupportController.updateAppRole.notes=To update an existing AppRole

ServiceAccountsControllerV2.getADServiceAccounts.value=To get list of service accounts from AD
ServiceAccountsControllerV2.getADServiceAccounts.notes=To get list of service accounts from AD

ServiceAccountsControllerV2.onboardServiceAccount.value=To onboard a service account into TVault for password rotation
ServiceAccountsControllerV2.onboardServiceAccount.notes=To onboard a service account into TVault for password rotation

ServiceAccountsControllerV2.addUserToServiceAccount.value=To add user to Service Account who can read/reset password
ServiceAccountsControllerV2.addUserToServiceAccount.notes=To add user to Service Account who can read/reset password

ServiceAccountsControllerV2.removeUserServiceAccount.value=To remove user from Service Account who can read/reset password
ServiceAccountsControllerV2.removeUserServiceAccount.notes=To remove user from Service Account who can read/reset password

ServiceAccountsControllerV2.resetPassword.value=To reset Service Account Password
ServiceAccountsControllerV2.resetPassword.notes=To reset Service Account Password

ServiceAccountsControllerV2.offboardServiceAccount.value=To offboard a service account from TVault for password rotation
ServiceAccountsControllerV2.offboardServiceAccount.notes=To offboard a service account from TVault for password rotation

ServiceAccountsControllerV2.getServiceAccounts.value=To get list of onboarded service accounts from TVault
ServiceAccountsControllerV2.getServiceAccounts.notes=To get list of onboarded service accounts from TVault

ServiceAccountsControllerV2.addGroupToServiceAccount.value=To add group to Service Account who can read/reset password
ServiceAccountsControllerV2.addGroupToServiceAccount.notes=To add group to Service Account who can read/reset password

ServiceAccountsControllerV2.removeGroupFromServiceAccount.value=To remove group from Service Account who can read/reset password
ServiceAccountsControllerV2.removeGroupFromServiceAccount.notes=To remove group from Service Account who can read/reset password

ServiceAccountsControllerV2.getServiceAccountsMeta.value=To get metadata of service accounts
ServiceAccountsControllerV2.getServiceAccountsMeta.notes=To get metadata of service accounts

ServiceAccountsControllerV2.associateApprole.value=To associate an AppRole to a Service Account
ServiceAccountsControllerV2.associateApprole.notes=To associate an AppRole to a Service Account

ServiceAccountsControllerV2.removeApprole.value=To remove an AppRole from Service Account
ServiceAccountsControllerV2.removeApprole.notes=To remove an AppRole from Service Account

ServiceAccountsControllerV2.addAWSRole.value=To add AWS role to a service account
ServiceAccountsControllerV2.addAWSRole.notes=To add AWS role to a service account

ServiceAccountsControllerV2.removeAWSRole.value=To remove AWS role from service account
ServiceAccountsControllerV2.removeAWSRole.notes=To remove AWS role from service account

ServiceAccountsControllerV2.createAWSRole.value=To create an aws app role
ServiceAccountsControllerV2.createAWSRole.notes=To create an aws app role

ServiceAccountsControllerV2.createIamRole.value=To create an aws iam role
ServiceAccountsControllerV2.createIamRole.notes=To create an aws iam role

ServiceAccountsControllerV2.updateOnboardServiceAccount.value=To update onboarded service account
ServiceAccountsControllerV2.updateOnboardServiceAccount.notes=To update onboarded service account

ServiceAccountsControllerV2.readPassword.value=To read Service Account Password
ServiceAccountsControllerV2.readPassword.notes=To read Service Account Password

AWSSecretController.createAWSRole.value=To create an aws role
AWSSecretController.createAWSRole.notes=To create an aws role

AWSSecretController.deleteAWSRole.value=To delete an aws role
AWSSecretController.deleteAWSRole.notes=To delete an aws role

AWSSecretController.getTemporaryCredentials.value=To get temporary credentials with elevated privileges
AWSSecretController.getTemporaryCredentials.notes=To get temporary credentials with elevated privileges

DatabaseSecretController.getTemporaryCredentials.value=To get temporary credentials for MySql database
DatabaseSecretController.getTemporaryCredentials.notes=To get temporary credentials for MySql database

DatabaseSecretController.createRole.value=To create database role
DatabaseSecretController.createRole.notes=To create database role

DatabaseSecretController.createStaticRole.value=To create static database role
DatabaseSecretController.createStaticRole.notes=To create static database role
